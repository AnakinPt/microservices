buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
    id "io.spring.dependency-management" version "1.0.5.RELEASE"
  id "com.palantir.docker" version "0.20.1"
}
group = 'hugodias'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

ext {
	springBootAdminVersion = '2.0.3'
	springCloudVersion = 'Finchley.SR1'
}

dependencies {
	implementation('de.codecentric:spring-boot-admin-starter-client')
	implementation('org.springframework.cloud:spring-cloud-config-server')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	compile 'org.springframework.cloud:spring-cloud-vault-starter-config'
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


repositories {
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

bootJar {
	baseName = 'configuration-service'
	version = '1.0.1'
}

docker {
    dependsOn build
    name "${project.group}/${bootJar.baseName}:${bootJar.version}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

jar{
	baseName = 'configuration-service'
	version = '1.0.1'
}

